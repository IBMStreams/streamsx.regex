<?xml version="1.0" encoding="UTF-8"?>
<functionModel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.ibm.com/xmlns/prod/streams/spl/function" xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/function functionModel.xsd">
  <functionSet>
    <headerFileName>Regex_xpressive.h</headerFileName>
    <cppNamespaceName></cppNamespaceName>
    <functions>
      <function>
        <description>
Compiles and indexes regular expression pattern.
@param pattern regular expression pattern of type rstring. 
@param patternIndex regular expression index of enum type (e.g. enum\{_1\}).
@return boolean regular expression compilation success.
       </description>
        <prototype>&lt;enum E> public boolean regexCompile(rstring pattern, E patternIndex)</prototype>
      </function>
      <function>
        <description>
Performs a full match of the whole string with the pattern - runs in interpretation mode (like SPL regexMatch function).
@param str string to match of type rstring. 
@param pattern regular expression of type rstring.
@return boolean matching success.
       </description>
        <prototype>public boolean regexFullMatch(rstring str, rstring pattern)</prototype>
      </function>
      <function>
        <description>
Performs a full match of the whole string with the pattern - runs in compiled mode (uses compiled regex index to identify the pattern).
@param str string to match of type rstring. 
@param patternIndex regular expression index of enum type (e.g. enum\{_1\}).
@return boolean matching success.
       </description>
        <prototype>&lt;enum E> public boolean regexFullMatch(rstring str, E patternIndex)</prototype>
      </function>
      <function>
        <description>
Performs a partial match of the string with the pattern - runs in interpretation mode (like SPL regexMatch function).
@param str string to match of type rstring. 
@param pattern regular expression of type rstring.
@return boolean matching success.
       </description>
        <prototype>public boolean regexPartialMatch(rstring str, rstring pattern)</prototype>
      </function>
      <function>
        <description>
Performs a partial match of the string with the pattern - runs in compiled mode (uses compiled regex index to identify the pattern).
@param str string to match of type rstring. 
@param patternIndex regular expression index of enum type (e.g. enum\{_1\}).
@return boolean matching success.
       </description>
        <prototype>&lt;enum E> public boolean regexPartialMatch(rstring str, E patternIndex)</prototype>
      </function>
      <function>
        <description>
Performs all replacements of the string after matching the pattern - runs in compiled mode (uses compiled regex index to identify the pattern).
@param str string to match of type rstring. 
@param patternIndex regular expression index of enum type (e.g. enum\{_1\}).
@param rewrite replace string of type rstring.
@return rstring number of matching successes.
       </description>
        <prototype cppName="">&lt;enum E> public rstring regexGlobalReplace(rstring str, E patternIndex, rstring rewrite)</prototype>
      </function>
    </functions>
    <dependencies>
      <library>
        <cmn:description></cmn:description>
        <cmn:managedLibrary>
          <cmn:includePath>../../impl/include</cmn:includePath>
          <cmn:command></cmn:command>
        </cmn:managedLibrary>
      </library>
    </dependencies>
  </functionSet>
</functionModel>