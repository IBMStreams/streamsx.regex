<?xml version="1.0" encoding="UTF-8"?>
<functionModel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.ibm.com/xmlns/prod/streams/spl/function" xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/function functionModel.xsd">
  <functionSet>
    <headerFileName>Regex.h</headerFileName>
    <cppNamespaceName>regex</cppNamespaceName>
    <functions>
      <function>
        <description>Compiles and indexes regex pattern</description>
        <prototype>&lt;enum E> public boolean regexCompile(rstring pattern, E patternIndex)</prototype>
      </function>
      <function>
        <description>Compiles and indexes regex pattern, additionally allows to control max memory allocated</description>
        <prototype>&lt;enum E> public boolean regexCompile(rstring pattern, E patternIndex, int64 maxmem)</prototype>
      </function>
      <function>
        <description>Compiles and indexes regex pattern. This is a static version - a pattern is visible on PE level</description>
        <prototype>&lt;enum E> public boolean regexCompileStatic(rstring pattern, E patternIndex)</prototype>
      </function>
      <function>
        <description>Compiles and indexes regex pattern, additionally allows to control max memory allocated. This is a static version - a pattern is visible on PE level</description>
        <prototype>&lt;enum E> public boolean regexCompileStatic(rstring pattern, E patternIndex, int64 maxmem)</prototype>
      </function>
      <function>
        <description>Performs a full match of the whole string with the pattern - runs in interpretation mode (like SPL regexMatch function)</description>
        <prototype>public boolean regexFullMatch(rstring str, rstring pattern)</prototype>
      </function>
      <function>
        <description>Performs a full match of the whole string with the pattern - runs in compiled mode (uses compiled regex index to identify the pattern)</description>
        <prototype>&lt;enum E> public boolean regexFullMatch(rstring str, E patternIndex)</prototype>
      </function>
      <function>
        <description>Performs a full match of the whole string with the pattern - runs in compiled mode (uses compiled regex index to identify the pattern). This is a static version - a pattern is visible on PE level</description>
        <prototype>&lt;enum E> public boolean regexFullMatchStatic(rstring str, E patternIndex)</prototype>
      </function>
      <function>
        <description>Performs a partial match of the string with the pattern - runs in interpretation mode (like SPL regexMatch function).</description>
        <prototype>public boolean regexPartialMatch(rstring str, rstring pattern)</prototype>
      </function>
      <function>
        <description>Performs a partial match of the string with the pattern - runs in compiled mode (uses compiled regex index to identify the pattern)</description>
        <prototype>&lt;enum E> public boolean regexPartialMatch(rstring str, E patternIndex)</prototype>
      </function>
      <function>
        <description>Performs a partial match of the string with the pattern - runs in compiled mode (uses compiled regex index to identify the pattern). This is a static version - a pattern is visible on PE level</description>
        <prototype>&lt;enum E> public boolean regexPartialMatchStatic(rstring str, E patternIndex)</prototype>
      </function>
    </functions>
    <dependencies>
      <library>
        <cmn:description></cmn:description>
        <cmn:managedLibrary>
          <cmn:libPath>../../impl/lib</cmn:libPath>
          <cmn:includePath>../../impl/include</cmn:includePath>
          <cmn:command>../../impl/bin/setLib.sh</cmn:command>
        </cmn:managedLibrary>
      </library>
    </dependencies>
  </functionSet>
</functionModel>